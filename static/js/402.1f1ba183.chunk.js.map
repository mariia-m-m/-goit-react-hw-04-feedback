{"version":3,"file":"static/js/402.1f1ba183.chunk.js","mappings":"4JAYA,IARsB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACvB,OACE,0BACE,eAAIC,UAAWC,EAAAA,EAAAA,MAAf,SAA8BF,KAGnC,C,iLCNKG,EAAc,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACfC,GAAWC,EAAAA,EAAAA,MAsBjB,OArBiBF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OAC1B,UAAC,KAAD,CACET,UAAWC,EAAAA,EAAAA,KACXS,MAAO,CAAEC,KAAMP,GACfQ,GAAE,UAAKL,GAHT,WAME,eAAIP,UAAWC,EAAAA,EAAAA,KAAf,UACE,cAAGD,UAAWC,EAAAA,EAAAA,SAAd,SAAgCO,OAElC,gBACEK,IACEJ,EACI,kCAAoCA,EACpC,qIAENK,IAAG,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAQK,MACbO,MAAO,QAZJR,EALmB,GAsB7B,EAED,IAEAL,EAAYc,aAAe,CACzBb,OAAQ,IC5BV,IA8CA,EA9CkB,SAAC,GAAkB,IAAhBc,EAAe,EAAfA,SACnB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAcC,EAAAA,EAAAA,cAAY,SAAAC,GAC9B,IAAQC,EAAUD,EAAME,OAAhBD,MACRJ,EAAUI,EACX,GAAE,IAQGE,EAAQ,WACZN,EAAU,GACX,EAED,OACE,mBAAQpB,UAAWC,EAAAA,EAAAA,UAAnB,UACE,kBAAMD,UAAWC,EAAAA,EAAAA,WAAmBgB,SAZnB,SAAAM,GACnBA,EAAMI,iBACNV,EAAS,CAAEE,OAAAA,IACXO,GACD,EAQG,WACE,mBAAQE,KAAK,SAAS5B,UAAWC,EAAAA,EAAAA,iBAAjC,UACE,iBAAMD,UAAWC,EAAAA,EAAAA,2BAEnB,kBAAO4B,QAAQ,SAAf,UACE,kBACE7B,UAAWC,EAAAA,EAAAA,gBACX6B,SAAUT,EACVU,KAAK,SACLP,MAAOL,EAAOK,MACdI,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,UAAQ,UAMnB,ECaD,EAlDe,WACb,OAA4BjB,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAeiC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMpB,EAASmB,EAAaE,IAAI,UAC1BC,EAAOH,EAAaE,IAAI,QAExBE,GAAepB,EAAAA,EAAAA,cACnB,YAAiB,IAAdH,EAAa,EAAbA,OACDoB,EAAgB,CAAEpB,OAAAA,EAAQsB,KAAM,IAChCL,EAAU,GACX,GACD,CAACG,EAAiBH,KAGpBO,EAAAA,EAAAA,YAAU,WACR,GAAKxB,EAAL,CAGA,IAAMyB,EAAW,mCAAG,8GAEGC,EAAAA,EAAAA,IAAgB1B,EAAQsB,GAF3B,OAEVK,EAFU,OAGhBV,GAAU,OAAIU,EAAKC,UAHH,gDAKhBC,QAAQC,IAAI,KAASH,KAAKI,SALV,yDAAH,qDAQjBN,GATC,CAUF,GAAE,CAACzB,EAAQsB,IAEZ,IAAMU,GAAW7B,EAAAA,EAAAA,cAAY,WAC3BiB,EAAgB,CAAEpB,OAAAA,EAAQsB,KAAMW,OAAOX,GAAQ,GAChD,GAAE,CAACF,EAAiBE,EAAMtB,IAE3B,OACE,iCACE,SAAC,EAAD,CAAWF,SAAUyB,KACrB,SAACW,EAAA,EAAD,WACE,SAAC,EAAD,CAAalD,OAAQA,MAEtBsC,EAAO,GACN,mBAAQa,QAASH,EAAUnD,UAAWC,EAAAA,EAAAA,WAAtC,uBAIA,gDAIP,C","sources":["components/MoviesGallery.jsx","components/MovieSearch.jsx","components/pages/Movies/Searchbar.jsx","components/pages/Movies/Movies.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport styles from './styles.module.css';\n\nconst MoviesGallery = ({ children }) => {\n  return (\n    <div>\n      <ul className={styles.block}>{children}</ul>\n    </div>\n  );\n};\n\nexport default MoviesGallery;\n\nMoviesGallery.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport styles from './styles.module.css';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MovieSearch = ({ movies }) => {\n  const location = useLocation();\n  const elements = movies.map(({ id, title, poster_path }) => (\n    <Link\n      className={styles.link}\n      state={{ from: location }}\n      to={`${id}`}\n      key={id}\n    >\n      <li className={styles.item}>\n        <p className={styles.filmName}>{title}</p>\n      </li>\n      <img\n        src={\n          poster_path\n            ? 'https://image.tmdb.org/t/p/w500' + poster_path\n            : 'https://drudesk.com/sites/default/files/styles/blog_page_header_1088x520/public/2018-02/404-error-page-not-found.jpg?itok=YW-iShwf'\n        }\n        alt={movies?.title}\n        width={100}\n      />\n    </Link>\n  ));\n  return elements;\n};\n\nexport default MovieSearch;\n\nMovieSearch.defaultProps = {\n  movies: [],\n};\n\nMovieSearch.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from '../../styles.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handleChage = useCallback(event => {\n    const { value } = event.target;\n    setSearch(value);\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ search });\n    reset();\n  };\n\n  const reset = () => {\n    setSearch('');\n  };\n\n  return (\n    <header className={styles.SearchBar}>\n      <form className={styles.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.SearchFormButton}>\n          <span className={styles.SearchFormButtonLabel}></span>\n        </button>\n        <label htmlFor=\"search\">\n          <input\n            className={styles.SearchFormInput}\n            onChange={handleChage}\n            name=\"search\"\n            value={search.value}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            required\n          />\n        </label>\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import styles from '../../styles.module.css';\nimport { getMoviesSearch } from 'components/api';\nimport { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MoviesGallery from 'components/MoviesGallery';\nimport MovieSearch from 'components/MovieSearch';\nimport Searchbar from './Searchbar';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n  const page = searchParams.get('page');\n\n  const searchMovies = useCallback(\n    ({ search }) => {\n      setSearchParams({ search, page: 1 });\n      setMovies([]);\n    },\n    [setSearchParams, setMovies]\n  );\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        const data = await getMoviesSearch(search, page);\n        setMovies([...data.results]);\n      } catch (response) {\n        console.log(response.data.message);\n      }\n    };\n    fetchMovies();\n  }, [search, page]);\n\n  const loadMore = useCallback(() => {\n    setSearchParams({ search, page: Number(page) + 1 });\n  }, [setSearchParams, page, search]);\n\n  return (\n    <>\n      <Searchbar onSubmit={searchMovies} />\n      <MoviesGallery>\n        <MovieSearch movies={movies} />\n      </MoviesGallery>\n      {page > 0 ? (\n        <button onClick={loadMore} className={styles.loadButton}>\n          LoadMore\n        </button>\n      ) : (\n        <p>Wait for search...</p>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["children","className","styles","MovieSearch","movies","location","useLocation","map","id","title","poster_path","state","from","to","src","alt","width","defaultProps","onSubmit","useState","search","setSearch","handleChage","useCallback","event","value","target","reset","preventDefault","type","htmlFor","onChange","name","autoComplete","autoFocus","placeholder","required","setMovies","useSearchParams","searchParams","setSearchParams","get","page","searchMovies","useEffect","fetchMovies","getMoviesSearch","data","results","console","log","message","loadMore","Number","MoviesGallery","onClick"],"sourceRoot":""}